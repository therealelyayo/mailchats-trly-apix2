stages:
  - test
  - build
  - deploy_staging
  - deploy_production

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  CONTAINER_IMAGE: therealelyayo/mailchats-trly-apix2:$CI_COMMIT_SHORT_SHA

test:
  stage: test
  image: node:18-alpine
  services:
    - name: postgres:14-alpine
      alias: postgres
  variables:
    POSTGRES_DB: mailchats_test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/mailchats_test"
  script:
    - cd app
    - npm ci
    - npm test
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - app/node_modules/

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker tag $CONTAINER_IMAGE therealelyayo/mailchats-trly-apix2:latest
    - docker push $CONTAINER_IMAGE
    - docker push therealelyayo/mailchats-trly-apix2:latest
  only:
    - main

deploy_staging:
  stage: deploy_staging
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$STAGING_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$STAGING_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $STAGING_SSH_USER@$STAGING_SSH_HOST "cd /opt/mailchats && docker-compose pull && docker-compose up -d && docker system prune -af"
  only:
    - main

deploy_production:
  stage: deploy_production
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$PRODUCTION_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$PRODUCTION_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $PRODUCTION_SSH_USER@$PRODUCTION_SSH_HOST "cd /opt/mailchats && docker-compose pull && docker-compose up -d && docker system prune -af"
  only:
    - main
  when: manual
  environment:
    name: production
    url: https://mailchats.com