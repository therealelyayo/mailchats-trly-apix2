version: '3.8'

services:
  mailchats:
    build:
      context: .
      dockerfile: Dockerfile
    image: mailchats-apix-v1:1.0.0
    container_name: mailchats-server
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SESSION_SECRET=${SESSION_SECRET:-change_this_to_a_random_string}
      # Database environment variables
      - DATABASE_URL=${DATABASE_URL:-}
      - PGHOST=${PGHOST:-postgres}
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:-postgres}
      - PGDATABASE=${PGDATABASE:-mailchats}
      - PGPORT=${PGPORT:-5432}
      # DeepSeek API key
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
    volumes:
      - mailchats_uploads:/app/uploads
      - mailchats_logs:/app/logs
      - mailchats_temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mailchats_network
    depends_on:
      - postgres
      
  postgres:
    image: postgres:15-alpine
    container_name: mailchats-postgres
    environment:
      - POSTGRES_USER=${PGUSER:-postgres}
      - POSTGRES_PASSWORD=${PGPASSWORD:-postgres}
      - POSTGRES_DB=${PGDATABASE:-mailchats}
    ports:
      - "${PGPORT_HOST:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mailchats_network
    profiles:
      - with-db

networks:
  mailchats_network:
    driver: bridge

volumes:
  mailchats_uploads:
  mailchats_logs:
  mailchats_temp:
  postgres_data: